{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "newStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The storage account where the VM and data disks will be created"
      }
    },
    "adminUserName": {
      "type": "string",
      "defaultValue": "AzAdmin",
      "metadata": {
        "description": "The username of the initial account to be created"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "AzP@ssword1",
      "metadata": {
        "description": "The password of the initial account to be created"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "West US",
      "metadata": {
        "description": "The Azure region where the resources will be deployed"
      }
    },
    "sizeOfEachDataDiskInGB": {
      "type": "string",
      "defaultValue": "1023",
      "metadata": {
        "description": "There will be 5 data disks created of this size and then striped. The total capacity will be 5x whatever you specify here"
      }
    },
    "dnsName": {
      "type": "string",
      "defaultValue": "cliveg101sql",
      "metadata": {
        "description": "DNS name for the Public IP"
      }
    },
    "vmCount": {
            "type": "int",
            "defaultValue": 2
        },
    "vmName": {
      "type": "string",
      "defaultValue": "101-vm-sql",
      "metadata": {
        "description": "The name of the VM resource"
      }
    },
    "modulesUrl": {
      "type": "string",
      "defaultValue": "https://github.com/CliveG/cx-sql/raw/master/StoragePool.ps1.zip",
      "metadata": {
        "description": "URL for the DSC configuration module. NOTE: Can be a Github url(raw) to the zip file"
      }
    }
  },
  "variables": {
    "imagePublisher": "MicrosoftSQLServer",
    "imageOffer": "SQL2014-WS2012R2",
    "imageSKU": "Enterprise",
    "vmSize": "Standard_DS3",
    "virtualNetworkName": "101-VNet-SQL",
    "nicName": "101-NIC-SQL",
    "networkSecurityGroupName": "101-NSG-SQL",
    "addressPrefix": "10.0.0.0/16",
    "subnet1Name": "Subnet-1",
    "subnet1Prefix": "10.0.0.0/24",
    "publicIPAddressName": "101-PubIP-Prod",
    "publicIPAddressType": "Dynamic",
    "storageAccountType": "Premium_LRS",
    "configurationFunction": "StoragePool.ps1\\StoragePool",
    "DscExtensionName": "DscExtension",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]",
    "dataDiskVhdName": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('newStorageAccountName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('publicIPAddressName'),copyIndex())]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('dnsName'),copyIndex())]"
        }
      },
      "copy": {
        "name": "publicIpCopy",
        "count": "[parameters('vmCount')]"
      }
    },
        {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "rdp-calgary",
            "properties": {
              "description": "RDP from Calgary Office",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "75.159.49.240/32",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound"
            }
          },
          {
            "name": "sql-calgary",
            "properties": {
              "description": "SQL from Calgary Office",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "1433",
              "sourceAddressPrefix": "75.159.49.240/32",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 301,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    },

    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'),copyIndex())]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', concat(variables('publicIPAddressName'),copyIndex()))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat('ipconfig', copyIndex())]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'),copyIndex()))]"
              },
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      },
      "copy": {
        "name": "nicCopy",
        "count": "[parameters('vmCount')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "copy": {
        "name": "nodeCopy",
        "count": "[parameters('vmCount')]"
      },
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmName'),copyIndex())]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('nicName')),copyIndex())]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computername": "[concat(parameters('vmName'),copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/',concat('osdisk'),copyIndex(),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk1",
              "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
              "lun": 0,
              "vhd": {
                "Uri": "[concat(variables('dataDiskVhdName'),parameters('vmName'),copyIndex(),'dataDisk1.vhd')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk2",
              "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
              "lun": 1,
              "vhd": {
                "Uri": "[concat(variables('dataDiskVhdName'),parameters('vmName'),copyIndex(),'dataDisk2.vhd')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk3",
              "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
              "lun": 2,
              "vhd": {
                "Uri": "[concat(variables('dataDiskVhdName'),parameters('vmName'),copyIndex(),'dataDisk3.vhd')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk4",
              "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
              "lun": 3,
              "vhd": {
                "Uri": "[concat(variables('dataDiskVhdName'),parameters('vmName'),copyIndex(),'dataDisk4.vhd')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk5",
              "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
              "lun": 4,
              "vhd": {
                "Uri": "[concat(variables('dataDiskVhdName'),parameters('vmName'),copyIndex(),'dataDisk5.vhd')]"

              },
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName')),copyIndex())]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "copy": {
        "name": "nodeCopy",
        "count": "[parameters('vmCount')]"
      },
      "name": "[concat(parameters('vmName'),copyIndex(),'/', variables('DscExtensionName'))]",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', concat(parameters('vmName')),copyIndex())]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "1.9",
        "settings": {
          "ModulesUrl": "[parameters('modulesUrl')]",
          "SasToken": "",
          "ConfigurationFunction": "[variables('configurationFunction')]",
          "Properties": {
            "MachineName": "[concat(parameters('vmName'),copyIndex())]"
          }
        },
        "protectedSettings": null
      }
    }
  ]
}
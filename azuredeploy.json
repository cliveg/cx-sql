{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "newStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The storage account where the VM and data disks will be created"
      }
    },
    "adminUserName": {
      "type": "string",
      "metadata": {
        "description": "The username of the initial account to be created"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password of the initial account to be created"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The Azure region where the resources will be deployed"
      }
    },
    "sizeOfEachDataDiskInGB": {
      "type": "string",
      "defaultValue": "1023",
      "metadata": {
        "description": "There will be 5 data disks created of this size and then striped. The total capacity will be 5x whatever you specify here"
      }
    },
    "dnsName": {
      "type": "string",
      "metadata": {
        "description": "DNS name for the Public IP"
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "myVM",
      "metadata": {
        "description": "The name of the VM resource"
      }
    },
    "modulesUrl": {
      "type": "string",
      "defaultValue": "https://github.com/CliveG/cx-sql/raw/master/StoragePool.ps1.zip",
      "metadata": {
        "description": "URL for the DSC configuration module. NOTE: Can be a Github url(raw) to the zip file"
      }
    }
  },
  "variables": {
    "imagePublisher": "MicrosoftSQLServer",
    "imageOffer": "SQL2014-WS2012R2",
    "imageSKU": "Enterprise",
    "vmSize": "Standard_D13",
    "virtualNetworkName": "highIopsVNET",
    "nicName": "highIopsNIC",
    "addressPrefix": "10.0.0.0/16",
    "subnet1Name": "Subnet-1",
    "subnet1Prefix": "10.0.0.0/24",
    "publicIPAddressName": "highIopsPubIP",
    "publicIPAddressType": "Dynamic",
    "storageAccountType": "Standard_LRS",
    "configurationFunction": "StoragePool.ps1\\StoragePool",
    "DscExtensionName": "DscExtension",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]",
    "dataDisk1VhdName": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/',parameters('vmName'),'dataDisk1.vhd')]",
    "dataDisk2VhdName": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/',parameters('vmName'),'dataDisk2.vhd')]",
    "dataDisk3VhdName": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/',parameters('vmName'),'dataDisk3.vhd')]",
    "dataDisk4VhdName": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/',parameters('vmName'),'dataDisk4.vhd')]",
    "dataDisk5VhdName": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/',parameters('vmName'),'dataDisk5.vhd')]",
  },
  "resources": [{
    "type": "Microsoft.Storage/storageAccounts",
    "name": "[parameters('newStorageAccountName')]",
    "apiVersion": "2015-05-01-preview",
    "location": "[parameters('location')]",
    "properties": {
      "accountType": "[variables('storageAccountType')]"
    }
  }, {
    "apiVersion": "2015-05-01-preview",
    "type": "Microsoft.Network/publicIPAddresses",
    "name": "[variables('publicIPAddressName')]",
    "location": "[parameters('location')]",
    "properties": {
      "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
      "dnsSettings": {
        "domainNameLabel": "[parameters('dnsName')]"
      }
    }
  }, {
    "apiVersion": "2015-05-01-preview",
    "type": "Microsoft.Network/virtualNetworks",
    "name": "[variables('virtualNetworkName')]",
    "location": "[parameters('location')]",
    "properties": {
      "addressSpace": {
        "addressPrefixes": [
          "[variables('addressPrefix')]"
        ]
      },
      "subnets": [{
        "name": "[variables('subnet1Name')]",
        "properties": {
          "addressPrefix": "[variables('subnet1Prefix')]"
        }
      }]
    }
  }, {
    "apiVersion": "2015-05-01-preview",
    "type": "Microsoft.Network/networkInterfaces",
    "name": "[variables('nicName')]",
    "location": "[parameters('location')]",
    "dependsOn": [
      "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
      "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
    ],
    "properties": {
      "ipConfigurations": [{
        "name": "ipconfig1",
        "properties": {
          "privateIPAllocationMethod": "Dynamic",
          "publicIPAddress": {
            "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
          },
          "subnet": {
            "id": "[variables('subnet1Ref')]"
          }
        }
      }]
    }
  }, {
    "apiVersion": "2015-05-01-preview",
    "type": "Microsoft.Compute/virtualMachines",
    "name": "[parameters('vmName')]",
    "location": "[parameters('location')]",
    "dependsOn": [
      "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
      "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
    ],
    "properties": {
      "hardwareProfile": {
        "vmSize": "[variables('vmSize')]"
      },
      "osProfile": {
        "computername": "[parameters('vmName')]",
        "adminUsername": "[parameters('adminUsername')]",
        "adminPassword": "[parameters('adminPassword')]"
      },
      "storageProfile": {
        "imageReference": {
          "publisher": "[variables('imagePublisher')]",
          "offer": "[variables('imageOffer')]",
          "sku": "[variables('imageSKU')]",
          "version": "latest"
        },
        "osDisk": {
          "name": "osdisk",
          "vhd": {
            "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/','osdisk.vhd')]"
          },
          "caching": "ReadWrite",
          "createOption": "FromImage"
        },
        "dataDisks": [{
          "name": "datadisk1",
          "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
          "lun": 0,
          "vhd": {
            "Uri": "[variables('dataDisk1VhdName')]"
          },
          "createOption": "Empty"
        }, {
          "name": "datadisk2",
          "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
          "lun": 1,
          "vhd": {
            "Uri": "[variables('dataDisk2VhdName')]"
          },
          "createOption": "Empty"
        }, {
          "name": "datadisk3",
          "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
          "lun": 2,
          "vhd": {
            "Uri": "[variables('dataDisk3VhdName')]"
          },
          "createOption": "Empty"
        }, {
          "name": "datadisk4",
          "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
          "lun": 3,
          "vhd": {
            "Uri": "[variables('dataDisk4VhdName')]"
          },
          "createOption": "Empty"
        }, {
          "name": "datadisk5",
          "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
          "lun": 4,
          "vhd": {
            "Uri": "[variables('dataDisk5VhdName')]"
          },
          "createOption": "Empty"
        }]
      },
      "networkProfile": {
        "networkInterfaces": [{
          "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
        }]
      }
    }
  }, {
    "type": "Microsoft.Compute/virtualMachines/extensions",
    "name": "[concat(parameters('vmName'),'/', variables('DscExtensionName'))]",
    "apiVersion": "2015-05-01-preview",
    "location": "[parameters('location')]",
    "dependsOn": [
      "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
    ],
    "properties": {
      "publisher": "Microsoft.Powershell",
      "type": "DSC",
      "typeHandlerVersion": "1.9",
      "settings": {
        "ModulesUrl": "[parameters('modulesUrl')]",
        "SasToken": "",
        "ConfigurationFunction": "[variables('configurationFunction')]",
        "Properties": {
          "MachineName": "[parameters('vmName')]"
        }
      },
      "protectedSettings": null
    }
  }]
}
